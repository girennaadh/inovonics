 GIT COMMANDS TO CLONE, PULL & MERGE.
 
 
primary development git branch called `apoorva-restructure` 
 
 Start by cloning this branch to your local files by executing the following command:
`git clone -b apoorva-restructure https://git.inovonics.com/cloud-services/rest-api`


To begin work on the project, create a new local branch and checkout that branch using the following commands,
 from inside the repository directory:
`git branch <branchname>` (creates a new branch)
`git checkout <branchname>` (switches currently active branch to the new branch)


Alternatively you can use `git checkout -b <branchname>` to checkout a branch, 
which will create the branch if it does not already exist.


add any new files to the branch and commit it to the origin branch:
`git add -a` (add all files not already included in the project or listed in .gitignore)
`git commit -m “<your commit message here>”` (commit the changes to the current branch)


Once all changes have been committed to the branch, merge the branch with your local repository
 (in this case, the cloned apoorva-restructure branch):
`git checkout apoorva_restructure` (switch to the apoorva-restructure branch)
`git pull` (update the branch from git, ensuring you will not have any conflicts,
 when it is time to push the branch)
`git merge <branchname>` (merge your changes with your local copy of apoorva-restructure)
`git push` (send your new version of apoorva-restructure to the online git repository for others to pull)


If changes have been made to the origin branch that you want to update in your local development branch,
 you must pull the updates and merge them with your development branch:
`git checkout apoorva-restructure` (switch to the apoorva-restructure branch)
`git pull` (update the branch from git)
`git checkout <branchname>` (switch to your development branch)
`git merge apoorva-restructure` (merge changes from the apoorva-restructure branch into your development branch)